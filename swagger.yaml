swagger: "2.0"
info:
  version: 1.0.0
  title: "AssignmentAPI"
  description: A sample API that uses a student scenario as an example to demonstrate features in the NodeJS specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Lorenzo Masciullo
    email: lorenzomasciullo@outlook.it
    url: https://github.com/lore-masc/API-skeleton
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: sleepy-citadel-35442.herokuapp.com
basePath: /assignment
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      description: Returns all assignments from the system that the user has access to
      operationId: findAssignment
      parameters:
        - name: studentid
          in: query
          description: parameter to filter to only a student assignments
          required: false
          type: integer
          items:
            type: integer
      responses:
        200:
          description: show the specific of a assignment set
        500:
          description: studentId not found
          schema:
            $ref: '#/definitions/ErrorStudent'
    post:
      description: Creates a new assignment in the store.
      operationId: add assignment
      parameters:
        - name: newAssignment
          in: body
          description: specify the new assignment
          required: true
          schema:
            $ref: '#/definitions/NewAssignment'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/AssignmentOk'
        500:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorAddAssignment'
  /{id}:
    get:
      description: Returns a specific assignment
      operationId: find assignment by id
      parameters:
        - name: id
          in: path
          description: ID of assignment to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: assignment response
          schema:
            $ref: '#/definitions/Assignment'
        500:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorAssignment'
    put:
      description: Update a single assignment based on the ID supplied
      operationId: updatePet
      parameters:
        - name: id
          in: path
          description: ID of assignment to update
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: assignment updated
          schema:
            $ref: '#/definitions/AssignmentUpdate'
        500:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorAssignment'
    delete:
      description: deletes a single assignment based on the ID supplied
      operationId: deleteAssignment
      parameters:
        - name: id
          in: path
          description: ID of assignment to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: assignment deleted
          schema:
            $ref: '#/definitions/DeletedOk'
        500:
          description: assignment not found
          schema:
            $ref: '#/definitions/ErrorAssignment'
definitions:
  ErrorAddAssignment:
    required:
      - message
    properties:
      message:
        type: string
        enum: ["Assignment non aggiunto"]
  ErrorAssignment:
    required:
      - message
    properties:
      message:
        type: string
        enum: ["Assignment non trovato"]
  ErrorStudent:
    required:
      - message
    properties:
      message:
        type: string
        enum: ["Student Id non trovato"]
  AssignmentOk:
    required:
      - message
      - assignmentId
    properties:
      message:
        type: string
        enum: ["Assignment aggiunto"]
      assignmentId:
        type: integer
        format: int32
  NewAssignment:
    required:
      - studentId
      - assignment_type
      - assignment_content
    properties:
      studentId:
        type: integer
        format: int32
      assignment_type:
        type: string
      assignment_content:
        type: string
  Assignment:
    required:
      - assignmentId
      - studentId
      - assignment_type
      - assignment_content
    properties:
      assignmentId:
        type: integer
        format: int32
      studentId:
        type: integer
        format: int32
      assignment_type:
        type: string
      assignment_content:
        type: string
  DeletedOk:
    required:
      - message
    properties:
      message:
        type: string
        enum: ["Assignment 2 eliminato"]
  AssignmentUpdate:
    required:
      - message
    properties:
      message:
        type: string
        enum: ["Assignment 2 aggiornato"]